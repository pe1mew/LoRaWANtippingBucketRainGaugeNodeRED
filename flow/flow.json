[{"id":"5b55d0d2.9958a","type":"http in","z":"b70b9c25.04ce48","name":"regendev V3","url":"/regendev","method":"post","upload":false,"swaggerDoc":"","x":110,"y":940,"wires":[["fef0b6e.3decac8"]]},{"id":"fef0b6e.3decac8","type":"function","z":"b70b9c25.04ce48","name":"Data processor V3 webhook","func":"// objects counted counted in payload\nvar objectCount = msg.payload.length;\nconst sourceIdentifier = \"118EBE99AFBA1C7D6B7D576741EA2\";\n\n// Create variables to hold JSON \nvar msgc = {};\nvar msgp = {};\nvar result = {};\n\n// Prepare http responce\nvar msg200 = {};        // Variable to hold http responce message\nmsg200.payload = \"200\"; // \"200\" for OK\nmsg200.req = msg.req;   // req from original msg for http responce node\nmsg200.res = msg.res;   // res from original msg for http responce node\n\nvar tzoffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds\nmsg.collectedTime = (new Date(Date.now() - tzoffset)).toISOString().slice(0, 19).replace('T', ' ');\n\n// Test if source is know,\n// Verification 1: Test for number of objects in array. Shall be > 3\nif( msg.req.headers.sourceidentifier === sourceIdentifier){\n    node.send([[msg200],[msg],[msg]]);\n}else{\n    node.send([[null],[null],[msg]]);\n}\n","outputs":3,"noerr":0,"initialize":"","finalize":"","x":340,"y":940,"wires":[["5edce3d5.241e6c"],["be68d820.c2429","c4071c05.1d3bd"],[]],"info":"-----------------------------------------------------------------\nThis Node is part of the PE1MEW http POST application.\n\nThe PE1MEW Node-Red http POST application is free software: \nYou may redistribute it and/or modify it under the terms of \na Creative Commons Attribution-NonCommercial 4.0 International \nLicense (http://creativecommons.org/licenses/by-nc/4.0/) by \nPE1MEW (http://pe1mew.nl) E-mail: pe1mew@pe1mew.nl\n\nThe PE1MEW http POST application is distributed in the \nhope that it will be useful, but WITHOUT ANY WARRANTY; \nWithout even the implied warranty of MERCHANTABILITY or \nFITNESS FOR A PARTICULAR PURPOSE.\n-----------------------------------------------------------------\n\\brief Receive http POST data from a LoRaWAN portal\n\\date See version table\n\\author Remko Welling (pe1mew@pe1mew.nl)\n\\version See version history\n\n## Version history\n\nversion | Date      | Athour | Notes\n--------|-----------|--------|-----------------------------------\n1.0     | 12-1-2020 | PE1MEW | First release\n1.1     | 5-12-2021 | PE1MEW | relese to the public\n\n## ToDo\n"},{"id":"5edce3d5.241e6c","type":"http response","z":"b70b9c25.04ce48","name":"Post Reply","statusCode":"","headers":{},"x":590,"y":900,"wires":[]},{"id":"490edf3.ce8cda","type":"inject","z":"b70b9c25.04ce48","name":"07:00 sample","props":[{"p":"payload"},{"p":"source","v":"TIME","vt":"str"},{"p":"moment","v":"7","vt":"num"}],"repeat":"","crontab":"00 07 * * *","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":600,"y":1060,"wires":[["f6e6a9a5.26f5c"]]},{"id":"be68d820.c2429","type":"debug","z":"b70b9c25.04ce48","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":570,"y":980,"wires":[]},{"id":"c4071c05.1d3bd","type":"function","z":"b70b9c25.04ce48","name":"Unifier TTNV3","func":"var unified = {};\nunified.source = \"TTNV3\";\n\nif('join_accept' in msg.payload){\n    return;\n}\n\n// unified.dateTime = msg.collectedTime;\nvar tzoffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds\nvar dateTime = (new Date(Date.now() - tzoffset)).toISOString().slice(0, 19).replace('T', ' ');\nunified.dateTime = dateTime;\n\nunified.devID = msg.payload.end_device_ids.device_id;\nunified.appEUI = msg.payload.end_device_ids.join_eui;\nunified.devEUI = msg.payload.end_device_ids.dev_eui;\nunified.fcnt = msg.payload.uplink_message.f_cnt;\nunified.port = msg.payload.uplink_message.f_port;\nunified.devAddr = msg.payload.end_device_ids.dev_addr;\nunified.frequency = parseInt(msg.payload.uplink_message.settings.frequency)/1000000;\nunified.sf = \"SF\" + msg.payload.uplink_message.settings.data_rate.lora.spreading_factor + \"BW\" + (msg.payload.uplink_message.settings.data_rate.lora.bandwidth/1000).toFixed();\nunified.payload = {};\nunified.payload.buffer = Buffer.from(msg.payload.uplink_message.frm_payload, 'base64');\nunified.payload.size = Buffer.byteLength(msg.payload.uplink_message.frm_payload);\nunified.payload.base64 = msg.payload.uplink_message.frm_payload;\nunified.payload.decoded = {};\nunified.payload.decoded = msg.payload.uplink_message.decoded_payload;\n\nunified.metaData = {};\nunified.metaData.gatewayCount = msg.payload.uplink_message.rx_metadata.length;\nunified.metaData.gateways = [];\nfor (var i=0 ; i < unified.metaData.gatewayCount ; i++) {\n    var data = {};\n    data.name = msg.payload.uplink_message.rx_metadata[i].gateway_ids.gateway_id;\n    \n    if(typeof msg.payload.uplink_message.rx_metadata[i].gateway_ids.eui !== 'undefined') {\n        data.id = msg.payload.uplink_message.rx_metadata[i].gateway_ids.eui;\n    } else {\n        data.id = 0;\n    }\n    \n    data.rssi = msg.payload.uplink_message.rx_metadata[i].rssi;\n    data.snr = msg.payload.uplink_message.rx_metadata[i].snr;\n    \n    if(typeof msg.payload.uplink_message.rx_metadata[i].location !== 'undefined') {\n        data.lat = msg.payload.uplink_message.rx_metadata[i].location.latitude;\n        data.lon = msg.payload.uplink_message.rx_metadata[i].location.longitude;\n        data.height = msg.payload.uplink_message.rx_metadata[i].location.altitude;\n    } else {\n        data.lat = 0;\n        data.lon = 0;\n        data.height = 0;\n    }\n    \n    unified.metaData.gateways.push(data);\n}\n\nreturn unified;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":600,"y":940,"wires":[["f6e6a9a5.26f5c"]],"inputLabels":["Helium"],"outputLabels":["Unified"],"icon":"font-awesome/fa-arrows-alt","info":"-----------------------------------------------------------------\nThis Node is part of the PE1MEW tipping bucket application.\n\nThe PE1MEW Node-Red tipping bucket application is free software: \nYou may redistribute it and/or modify it under the terms of \na Creative Commons Attribution-NonCommercial 4.0 International \nLicense (http://creativecommons.org/licenses/by-nc/4.0/) by \nPE1MEW (http://pe1mew.nl) E-mail: pe1mew@pe1mew.nl\n\nThe PE1MEW tipping bucket application is distributed in the \nhope that it will be useful, but WITHOUT ANY WARRANTY; \nWithout even the implied warranty of MERCHANTABILITY or \nFITNESS FOR A PARTICULAR PURPOSE.\n-----------------------------------------------------------------\n\\brief Unify TTN V3 webhook information\n\\date See version table\n\\author Remko Welling (pe1mew@pe1mew.nl)\n\\version See version history\n\n## Version history\n\nversion | Date      | Athour | Notes\n--------|-----------|--------|-----------------------------------\n1.0     | 5-12-2021 | PE1MEW | release to the public\n\n## ToDo\n"},{"id":"f6e6a9a5.26f5c","type":"function","z":"b70b9c25.04ce48","name":"LDS01 Tipping Bucket Logic","func":"const mmPerTip = 1.0;\n\nvar _rainTemplate = {\n\t\"lastTip\" : 0,\n\t\"twelveHours\" : 0,\n\t\"lastTwelveHours\" : 0\n}\n\nvar rainData = flow.get(\"rainData\");\nif (rainData === undefined) //test exists\n{\n  rainData = _rainTemplate;\n}\n\nswitch(msg.source){\n    case \"TTNV3\":\n        msg.received = msg.payload;\n        msg.payload = {};\n        \n        let doorStatus = msg.received.decoded.doorOpenTimes * 2 - 2;\n        let count = -1 * (msg.received.decoded.doorOpenStatus - 1) + doorStatus + 1;\n        \n        msg.payload.rainFallTotalmm = count * mmPerTip;\n        msg.payload.rainFallmm = (count - rainData.lastTip) * mmPerTip;\n        rainData.lastTip = count;\n\n        msg.payload.rainFallTwelveHours = rainData.twelveHours + msg.payload.rainFallmm;\n        rainData.twelveHours = msg.payload.rainFallTwelveHours;\n\n        break;\n        \n    case \"TIME\":\n        msg.payload = {};\n        msg.payload.twelveHours = rainData.twelveHours;\n        msg.payload.hour = msg.moment;\n        \n        rainData.lastTwelveHours = rainData.twelveHours;\n        rainData.twelveHours = 0;\n        \n        break; \n        \n    default:\n    \n        break;\n}\n\nflow.set(\"rainData\", rainData);\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":840,"y":940,"wires":[["3430b0fa.9b5ad"]],"info":"-----------------------------------------------------------------\nThis Node is part of the PE1MEW tipping bucket application.\n\nThe PE1MEW Node-Red tipping bucket application is free software: \nYou may redistribute it and/or modify it under the terms of \na Creative Commons Attribution-NonCommercial 4.0 International \nLicense (http://creativecommons.org/licenses/by-nc/4.0/) by \nPE1MEW (http://pe1mew.nl) E-mail: pe1mew@pe1mew.nl\n\nThe PE1MEW tipping bucket application is distributed in the \nhope that it will be useful, but WITHOUT ANY WARRANTY; \nWithout even the implied warranty of MERCHANTABILITY or \nFITNESS FOR A PARTICULAR PURPOSE.\n-----------------------------------------------------------------\n\\brief Convert LDS01 payload into mm rain and store per 12 hours\n\\date See version table\n\\author Remko Welling (pe1mew@pe1mew.nl)\n\\version See version history\n\n## Version history\n\nversion | Date      | Athour | Notes\n--------|-----------|--------|-----------------------------------\n1.0     | 5-12-2021 | PE1MEW | relese to the public\n\n## ToDo\n"},{"id":"3430b0fa.9b5ad","type":"debug","z":"b70b9c25.04ce48","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1030,"y":940,"wires":[]},{"id":"d3f0a813.f64058","type":"inject","z":"b70b9c25.04ce48","name":"19:00 sample","props":[{"p":"payload"},{"p":"source","v":"TIME","vt":"str"},{"p":"moment","v":"19","vt":"num"}],"repeat":"","crontab":"00 19 * * *","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":600,"y":1020,"wires":[["f6e6a9a5.26f5c"]]}]